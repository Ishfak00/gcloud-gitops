name: "gcloud gitops workflows"
on: workflow_dispatch


jobs:
    gcloud-gitops-access:
        name: "access gcloud for gitops workflows"
        runs-on: ubuntu-latest
        permissions:
            id-token: 'write'
            contents: 'read'
        
        steps:
            - name: Check out repository code
              uses: 'actions/checkout@v4'
            

            - name: fresh
              run: gcloud auth application-default revoke
              
            - id: auth
              name: Authenticate gcloud with WIF
              uses: 'google-github-actions/auth@v2'
              with:
                workload_identity_provider:  projects/671969297159/locations/global/workloadIdentityPools/github-pool/providers/githubwif
                service_account: github-iam-wif@primal-gear-411416.iam.gserviceaccount.com
              #  token_format: "access_token"
               # create_credentials_file: true
                #activate_credentials_file: true

           # - name: gcloud login with credentials 
            #  run:  gcloud auth login --cred-file=${{ steps.auth.outputs.credentials_file_path }} 
        
      

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with: 
                terraform_version: "1.8.1"

            - name: Terraform Init
              id: init
              run: terraform init 
            
            - name: Terraform format
              id: fmt
              run: terraform fmt -check
              continue-on-error: true

            - name: Terraform validate
              id: validate
              run: terraform validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color -input=false -out tfplanfile
              continue-on-error: true

            - name: Terraform Plan Status
              if: steps.plan.outcome == 'faliure'
              run: exit 1
 
            - name: Terraform Apply
              id: apply
              if: github.ref == 'refs/heads/main'
              run: terraform apply -auto-approve -input=false 

              
            - name: Get Kubernetes Cluster Name
              id: get_cluster_name
              run: echo "::set-output name=cluster_name::$(terraform output -raw kubernetes_cluster_name)"

            - name: Get Kubernetes Zone Name
              id: get_zone_name
              run: echo "::set-output name=zone_name::$(terraform output -raw zone)"

              

            - id: 'get-credentials'
              name: Get GKE Credentials
              uses: 'google-github-actions/get-gke-credentials@v2'
              with:
                cluster_name:  '${{ steps.get_cluster_name.outputs.cluster_name }}'
                location: '${{ steps.get_zone_name.outputs.zone_name }}'
        
            # The KUBECONFIG env var is automatically exported and picked up by kubectl.
            - id: 'get-pods'
              name: View Cluster Nodes 
              run: 'kubectl get nodes'